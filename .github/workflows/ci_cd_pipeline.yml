name: CI/CD Pipeline

on:
  push:
    paths:
      - docker_container.yml   # Trigger when this file changes
    branches:
      - main   # or the branch you're using

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
    
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
    
      - name: Get EC2 Public IP
        id: get_ec2_ip
        run: |
          EC2_PUBLIC_IP=$(aws ec2 describe-instances \
            --filters "Name=tag:Name,Values=my-instance" \
            --query "Reservations[0].Instances[0].PublicIpAddress" \
            --output text)
          echo "EC2 Public IP: $EC2_PUBLIC_IP"
          echo "EC2_PUBLIC_IP=$EC2_PUBLIC_IP" >> $GITHUB_ENV
    
      - name: Retrieve secret from AWS Secrets Manager
        id: get_secret
        run: |
          SECRET=$(aws secretsmanager get-secret-value --secret-id db_credentials_qw4it1c7 --query SecretString --output text)
          DB_USERNAME=$(echo $SECRET | jq -r .DATABASE_USERNAME)
          DB_PASSWORD=$(echo $SECRET | jq -r .DATABASE_PASSWORD)
          echo "DB_USERNAME=$DB_USERNAME" >> $GITHUB_ENV
          echo "DB_PASSWORD=$DB_PASSWORD" >> $GITHUB_ENV

      - name: Update inventory.ini
        run: |
          echo "Updating inventory.ini with EC2 Public IP"
          sed -i "s|<EC2_IP_PLACEHOLDER>|${{ env.EC2_PUBLIC_IP }}|" ansible/inventory.ini
      
      - name: Update docker_container.yml
        run: |
          echo "Updating docker_container.yml with the secret"
          sed -i "s|db_credentials_qw4it1c7|${{ env.SECRET_NAME }}|" ansible/docker_container.yml
          git add ansible/docker_container.yml ansible/inventory.ini
          git commit -m "Updated inventory and docker container with new EC2 IP and secrets"
          git push origin main

      - name: Run Ansible playbook to deploy
        run: |
          ansible-playbook -i ansible/inventory.ini ansible/docker_container.yml
