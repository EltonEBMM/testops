name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - ansible/**

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Verify AWS Login
        run: |
          echo "Verifying AWS credentials..."
          aws sts get-caller-identity
          echo "AWS Login successful!"

      - name: Fetch EC2 Public IPv4 DNS and Update inventory.ini
        run: |
          # Fetch the public IP of the first running EC2 instance
          echo "Fetching EC2 Instance Public IPv4 DNS..."

          PUBLIC_DNS=$(aws ec2 describe-instances \
            --query "Reservations[*].Instances[?State.Name=='running'].PublicDnsName" \
            --output text | head -n 1)
          
          if [ -z "$PUBLIC_DNS" ]; then
              echo "No running EC2 instances found!"
              exit 1
          fi

          echo "EC2 Public DNS: $PUBLIC_DNS"

          # Write the IP to inventory.ini
          echo "[my_servers]" > ansible/inventory.ini
          echo "${PUBLIC_DNS} ansible_port=443 ansible_user=ec2-user" >> ansible/inventory.ini

          echo "Content of inventory.ini:"
          cat ansible/inventory.ini

      - name: Fetch Secrets from AWS Secrets Manager and Update docker_container.yml
        run: |
          echo "Fetching Secrets from AWS Secrets Manager..."

          # Fetch the first secret name that starts with 'db'
          SECRET_NAME=$(aws secretsmanager list-secrets \
            --query "SecretList[?starts_with(Name, 'db')].Name" \
            --output text | head -n 1)

          if [ -z "$SECRET_NAME" ]; then
              echo "No secrets found starting with 'db'!"
              exit 1
          fi

          echo "Found Secret: $SECRET_NAME"

          # Update docker_container.yml with the fetched secret name
          sed -i "s|mysecret: .*|mysecret: \"{{ lookup('amazon.aws.secretsmanager_secret', '${SECRET_NAME}', region='us-east-1') }}\"|" ansible/docker_container.yml

          echo "Updated docker_container.yml with Secret: $SECRET_NAME"
          echo "Content of docker_container.yml:"
          cat ansible/docker_container.yml
